1. Find the kth element in a linked list from the end of singlly linked list in :
   
   1. Using two traversal 
   2. In single traversal (using 2 pointer approch).

---->>>>> package Apr25_Linkedlist;

public class find_Kth_elementIN_linkedList {
	static Node head;

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		for (int i = 10; i >= 1; i--) {
			addFirst(i * 10);
		}
		int k = 10;
		find_Kth(k);

		Display();

	}

	private static void Display() {
		// TODO Auto-generated method stub

		if (head == null)
			return;

		else {
			Node cur = head;
			while (cur != null) {
				System.out.print(cur.data + " ");
				cur = cur.next;
			}
		}

	}

	private static void find_Kth(int k) {
		// TODO Auto-generated method stub

		if (head == null)
			return;

		else if (head.next == null) {
			System.out.println("only one element is present in list");
			return;
		}

		else {
			int count = 1;
			Node cur = head;
			while (cur != null) {
				if (cur.data == k)
					System.out.println("k th element is Presents: " + count);

				cur = cur.next;
				count++;
			}
		}

	}

	private static void addFirst(int data) {
		// TODO Auto-generated method stub
		Node newNode = new Node(data);
		if (head == null)
			head = newNode;

		else {
			newNode.next = head;
			head = newNode;
		}

	}

}


2. Reverse the last 3 nodes in a linked list
Input -     10->20->30->40->50->60->70
Output -   10->20->30>40>70->60->50